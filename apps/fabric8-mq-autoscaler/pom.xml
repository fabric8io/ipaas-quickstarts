<!--

     Copyright 2005-2014 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.fabric8.jube.images.fabric8</groupId>
        <artifactId>apps</artifactId>
        <version>2.2-SNAPSHOT</version>
    </parent>

    <artifactId>fabric8-mq-autoscaler</artifactId>
    <packaging>jar</packaging>

    <name>Fabric8 MQ : AutoScaler</name>
    <description>Fabric8 MQ AutoScaler</description>

    <properties>
        <version.maven-surefire-plugin>2.15</version.maven-surefire-plugin>
        <docker.env.MAIN>io.fabric8.mq.autoscaler.MQAutoScalerMain</docker.env.MAIN>

        <fabric8.replicationController.name>fabric8mq-auto-scaler-controller</fabric8.replicationController.name>
        <fabric8.env.AMQ_SERVICE_ID>fabric8MQ</fabric8.env.AMQ_SERVICE_ID>
        <fabric8.env.AMQ_GROUP_NAME>defaultMQGroup</fabric8.env.AMQ_GROUP_NAME>
        <fabric8.env.MAX_GROUP_SIZE>5</fabric8.env.MAX_GROUP_SIZE>
        <fabric8.env.MIN_GROUP_SIZE>5</fabric8.env.MIN_GROUP_SIZE>
        <fabric8.env.MAX_BROKER_CONNECTIONS>20</fabric8.env.MAX_BROKER_CONNECTIONS>
        <fabric8.env.MAX_BROKER_DESTINATIONS>20</fabric8.env.MAX_BROKER_DESTINATIONS>
        <fabric8.env.MAX_DESTINATION_DEPTH>10</fabric8.env.MAX_DESTINATION_DEPTH>
        <fabric8.env.MAX_PRODUCERS_PER_DESTINATION>10</fabric8.env.MAX_PRODUCERS_PER_DESTINATION>
        <fabric8.env.MAX_CONSUMERS_PER_DESTINATION>10</fabric8.env.MAX_CONSUMERS_PER_DESTINATION>
        <fabric8.env.MIN_PRODUCERS_PER_DESTINATION>1</fabric8.env.MIN_PRODUCERS_PER_DESTINATION>
        <fabric8.env.MIN_CONSUMERS_PER_DESTINATION>1</fabric8.env.MIN_CONSUMERS_PER_DESTINATION>
        <fabric8.env.POLL_TIME>5</fabric8.env.POLL_TIME>
        <fabric8.label.component>fabric8MQAutoScaler</fabric8.label.component>
        <fabric8.label.group>fabric8mq</fabric8.label.group>
        <fabric8.label.provider>fabric8</fabric8.label.provider>
        <fabric8.iconRef>icons/activemq.svg</fabric8.iconRef>

        <!-- jube properties -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-jolokia</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-arquillian</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-assertions</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
                <configuration>
                    <forkMode>perTest</forkMode>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                  <images>
                    <image>
                      <name>${docker.image}</name>
                      <build>
                        <from>${docker.from}</from>
                        <assembly>
                          <descriptorRef>${docker.assemblyDescriptorRef}</descriptorRef>
                        </assembly>
                        <env>
                          <MAIN>${docker.env.MAIN}</MAIN>
                          <AMQ_SERVICE_ID>fabric8MQ</AMQ_SERVICE_ID>
                          <AMQ_GROUP_NAME>defaultMQGroup</AMQ_GROUP_NAME>
                          <MAX_GROUP_SIZE>5</MAX_GROUP_SIZE>
                          <MIN_GROUP_SIZE>5</MIN_GROUP_SIZE>
                          <MAX_BROKER_CONNECTIONS>2</MAX_BROKER_CONNECTIONS>
                          <MAX_BROKER_DESTINATIONS>2</MAX_BROKER_DESTINATIONS>
                          <MAX_DESTINATION_DEPTH>10</MAX_DESTINATION_DEPTH>
                          <MAX_PRODUCERS_PER_DESTINATION>2</MAX_PRODUCERS_PER_DESTINATION>
                          <MAX_CONSUMERS_PER_DESTINATION>2</MAX_CONSUMERS_PER_DESTINATION>
                          <POLL_TIME>5</POLL_TIME>
                        </env>
                        <ports>
                          <port>8778</port>
                        </ports>
                      </build>
                    </image>
                  </images>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>io.fabric8.mq.autoscaler.MQAutoScalerMain</mainClass>
                    <includePluginDependencies>false</includePluginDependencies>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
          <id>jube</id>
          <activation>
            <activeByDefault>true</activeByDefault>
          </activation>
          <build>
            <plugins>
              <plugin>
                <groupId>io.fabric8.jube</groupId>
                <artifactId>jube-maven-plugin</artifactId>
                <version>${jube.version}</version>
                <executions>
                  <execution>
                    <goals>
                      <goal>build</goal>
                    </goals>
                    <phase>package</phase>
                  </execution>
                </executions>
              </plugin>
            </plugins>
          </build>
        </profile>

        <profile>
            <id>docker-build</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jolokia</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

      <profile>
        <id>docker-push</id>
        <build>
          <plugins>
            <plugin>
              <groupId>org.jolokia</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>${docker.maven.plugin.version}</version>
              <executions>
                <execution>
                  <goals>
                    <goal>build</goal>
                    <goal>push</goal>
                  </goals>
                  <phase>package</phase>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </build>
      </profile>
    </profiles>

</project>
